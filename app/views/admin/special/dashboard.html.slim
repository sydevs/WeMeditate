
- host = Rails.configuration.published_locales.include?(Globalize.locale.to_sym) ? public_url : language_name(Globalize.locale)
- content_for :title, translate('admin.dashboard.title', language: host)

.ui.icon.message
  i.question.circle.icon
  .content
    .header = translate('admin.tutorial.dashboard.title')
    .message
      - role_name = human_enum_name(current_user, :role)
      - role_description = translate(current_user.role, scope: %i[admin permissions role_description])
      p = translate('admin.tutorial.dashboard.message')
      p = translate('admin.tutorial.dashboard.role_description', role: role_name, description: role_description)
      a.ui.primary.button href=admin_tutorial_path = translate('admin.tutorial.dashboard.action')

h3 = translate 'admin.dashboard.content.title'
- if Rails.configuration.published_locales.include?(Globalize.locale.to_sym)
  p = translate 'admin.dashboard.content.public', language: language_name(Globalize.locale).downcase, host: public_url
- else
  p = translate 'admin.dashboard.content.private', language: language_name(Globalize.locale).downcase, host: public_url
.ui.four.statistics
  .statistic
    .value = Article.published.count
    .label = human_model_name(Article, :plural)
  .statistic
    .value = Meditation.published.count
    .label = human_model_name(Meditation, :plural)
  .statistic
    .value = Track.published.count
    .label = human_model_name(Track, :plural)
  .statistic
    .value = Treatment.published.count
    .label = human_model_name(Treatment, :plural)

.ui.divider

- if policy(Article).publish?
  h3 = translate 'admin.dashboard.schedule.title'
  p = translate 'admin.dashboard.schedule.description'

  table.ui.very.basic.compact.unstackable.models.table
    tbody
      - if Article.upcoming.present?
        - Article.upcoming.each do |article|
          tr
            td.collapsing = table_icon model_icon_key(Article), human_model_name(Article)
            td.selector: a href=polymorphic_admin_path([:preview, :admin, article]) = article.name
            td.collapsing.right.aligned.disabled = article.published_at.strftime('%e %B, %Y UTC')
      - else
        tr
          td = translate 'admin.dashboard.schedule.no_schedule'


h3 = translate 'admin.dashboard.alerts.title'
p = translate 'admin.dashboard.alerts.description'

table.ui.very.basic.compact.unstackable.models.table
  tbody
    - has_issues = false
    - dashboard_issues do |issue|
      - has_issues = true
      tr
        td.collapsing
          = table_icon model_icon_key(issue[:model]), human_model_name(issue[:model])

        td.selector
          a href=issue[:url] = issue[:name]

        td.collapsing.right.aligned.disabled
          = issue[:message]

        td.collapsing.right.aligned
          = table_icon urgency_icon_key(issue[:urgency]), translate(issue[:urgency], scope: %i[admin tags urgency])
    
    - unless has_issues
      tr
        td = translate 'admin.dashboard.alerts.no_issues'
