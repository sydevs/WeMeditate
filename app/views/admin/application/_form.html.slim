
- allow = policy(record)

- if record.draftable? && record.has_draft? && record.parsed_draft.except('content', 'contributors').present?
  .ui.yellow.message = translate 'admin.messages.unapproved_changes_notice', page: human_model_name(record)

- if record.is_a?(User) && record.pending_invitation?
  .ui.yellow.message = translate 'admin.messages.pending_invitation_notice', person: human_enum_name(record, :role).downcase

= simple_form_for record, url: polymorphic_admin_path([:admin, record]), html: { id: "editor-form", class: "#{'error' if record.errors.present?}", novalidate: true } do |f|
  - if record.errors.present?
    .ui.error.message
      .header = translate 'admin.messages.errors'
      ul.list
        - record.errors.full_messages.each do |message|
          li = message

  - locale = !@record.try(:has_translation?, :details) ? @record.original_locale : Globalize.locale
  - context_locale = Globalize.locale
  - Globalize.with_locale(locale) do
    = render 'admin/application/fields', f: f, record: record, context_locale: context_locale

  .ui.hidden.divider

  - if !allow.show? && !@record.new_record? && allow.destroy?
    .table-actions
      a.ui.basic.button href=polymorphic_admin_path([:admin, @record]) data={ method: 'delete', confirm: translate('admin.messages.confirm_destroy') }
        i.warning.sign.icon
        = translate 'admin.action.target.destroy', record: human_model_name(record)

  p
    - confirm = translate('admin.messages.confirm_unsaved_changes') if action_name == 'write'

    - if allow.show?
      a.ui.basic.button href=polymorphic_admin_path([:admin, record]) data-confirm=confirm
        i.left.arrow.icon
        = translate 'admin.action.simple.back'
    - elsif policy(@model).index?
      a.ui.basic.button href=polymorphic_admin_path([:admin, defined?(record.page) ? record.page : record.class]) data-confirm=confirm
        i.left.arrow.icon
        = translate 'admin.action.target.back', records: human_model_name(record, :plural)

    - if record.is_a?(User) && record.new_record?
      button.ui.basic.primary.button type='submit'
        = translate 'admin.action.simple.invite'
    - elsif record.draftable?
      button.ui.basic.positive.button type='submit' name='draft' value='true'
        = allow.publish? ? translate('admin.action.simple.save_draft') : translate('admin.action.simple.update')

      - if allow.publish? && !(record.is_a?(Article) && record.new_record?)
        button.ui.basic.primary.button type='submit'
          = translate 'admin.action.simple.update'
          '  &
          = translate 'admin.action.simple.approve'
    - else
      button.ui.basic.primary.button type='submit'
        = translate 'admin.action.simple.update'
        '  &
        = translate 'admin.action.simple.approve'

    - if record.is_a?(User) && allow.create? && record.pending_invitation?
      button.ui.basic.primary.button type='submit' name='reinvite' value='true'
        = translate 'admin.action.simple.reinvite'

    = render 'uploader', endpoint: polymorphic_admin_path([:admin, @record, MediaFile]) if @record.respond_to?(:media_files) && !@record.new_record?
