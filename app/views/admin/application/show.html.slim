
- content_for :title, human_model_name(@model)
- reorder = (params[:reorder] == 'true')
- model_name = human_model_name(@model).downcase
- allow = policy(@record)

- unless reorder
  .table-actions
    .ui.tiny.compact.basic.buttons
      - if @record.draftable? && @record.has_draft?
        .ui.active.button = translate('admin.details.pending_changes', page: model_name)

      - if allow.review? && @record.ready_for_review?
        - action_text = :review
        - action_key = :review
      - else
        - action_text = :edit_details
        - action_key = :edit

      - if allow.edit?
        a.ui.button href=polymorphic_admin_path([action_key, :admin, @record])
          i.edit.icon
          = translate(action_text, scope: %i[admin action simple])

      - if @record.has_translation?
        .ui.floating.simple.dropdown.icon.compact.button
          i.dropdown.icon
          .menu
            - if @record.has_draft? && allow.edit?
              a.item href=polymorphic_admin_path([:edit, :admin, @record])
                i.edit.icon
                = translate 'admin.action.simple.edit_details'
            - if @record.published?
              - url = @record.is_a?(StaticPage) ? static_page_url(@record) : polymorphic_public_url(@record)
              a.item href=url target='_blank'
                i.eye.icon
                = translate 'admin.action.descriptive.show'
            - if allow.preview?
              a.item href=polymorphic_admin_path([:preview, :admin, @record]) target='_blank'
                i.eye.icon
                = translate 'admin.action.descriptive.preview'
            - if allow.audit?
              a.item href=polymorphic_admin_path([:audit, :admin, @record])
                i.th.list.icon
                = translate 'admin.action.descriptive.audit'
            - if allow.destroy?
              a.item href=polymorphic_admin_path([:admin, @record]) data={ method: 'delete', confirm: translate('admin.messages.confirm_destroy') }
                i.warning.sign.icon
                = translate 'admin.action.target.destroy', record: model_name

.details
  h3.ui.header = @record.preview_name
  = render "admin/details/#{@record.model_name.param_key}", record: @record

  - if @record.draftable?
    .ui.small.details.list
      - if @record.published? && @record.try(:published_at)
        - if @record.published_at < DateTime.now
          = record_detail 'bullhorn', translate('admin.tags.published_ago', time_ago: time_ago_in_words(@record.published_at))
        - else
          = record_detail 'bullhorn', translate('admin.tags.published_from_now', time_from_now: time_ago_in_words(@record.published_at))
      = record_detail 'edit', translate('admin.tags.updated_ago', time_ago: time_ago_in_words(@record.updated_at))

      - if owner = @record.try(:owner)
        - owned_by = translate('admin.details.owned_by', owner: owner.name)
        - if policy(owner).edit?
          - view_user = translate('admin.action.target.show', record: human_model_name(User))
          = record_detail 'user', owned_by, view_user, url: polymorphic_admin_path([:edit, :admin, owner])
        - else
          = record_detail 'user', owned_by

.clearfix

.ui.divider

- if allow.write?
  .table-actions
    = table_action translate(:edit_content, scope: %i[admin action simple]), 'pencil alternate', polymorphic_admin_path([:write, :admin, @record])
- elsif allow.edit? && !@record.has_translation?
  .table-actions
    .ui.tiny.compact.basic.buttons
      .ui.active.button
        = translate('admin.messages.start_details_before_content')

h4 = translate 'admin.content.outline_title', page: human_model_name(@model)
- if @record.draft?
  .ui.yellow.message = translate 'admin.messages.draft_outline', page: human_model_name(@model).downcase, count: @record.draft_content_blocks.count

= content_outline @record

.ui.hidden.divider
= table_link translate('admin.action.target.back', records: human_model_name(@model, :plural)), 'left arrow', polymorphic_admin_path([:admin, @model])
