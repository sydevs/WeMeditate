
ruby:
  content_for :title, translate('admin.action.target.write', record: human_model_name(@record))
  
  allow = policy(@record)
  has_draft = @record.has_draft?(:content)

#autosaver style='display: none'
  strong = translate('admin.messages.autosave_detected')
  br
  em = Date.today.to_s(:long)
  br
  a href="?autosave=load" = translate('admin.action.descriptive.restore_autosave')

= simple_form_for @record, url: polymorphic_admin_path([:admin, @record]), html: { id: "editor-form" } do |f|
  - locale = !@record.try(:has_translation?, :content) ? @record.original_locale : Globalize.locale
  - Globalize.with_locale(locale) do
    - content = has_draft ? @record.parsed_draft_content : (@record.parsed_content || {})
    = f.hidden_field :content, as: :hidden, id: 'content-input'

    .field class=('draft' if has_draft) data-draft='content'
      - if @record.draftable? && has_draft && @record.parsed_draft_content.present?
        .ui.yellow.message = translate 'admin.messages.draft_notice', page: human_model_name(@record)

        /= draft_reset_buttons(:content, @record.parsed_content, JSON.parse(content))
        /.clearfix

      #content-editor data-content=content.to_json data-autosave-key="wemeditate.autosave.#{@record.model_name.route_key}.#{@record.id}" data-load-autosave=(params[:autosave] == 'load' ? 'true' : nil)

    - if @record.respond_to?(:published) && !allow.review?
      - if @record.draftable?
        = draftable_publish_field f
      - elsif allow.publish?
        = f.input :published do
          = publish_input f, :published, enabled: allow.publish?

    p
      - if allow.show?
        a.ui.basic.button href=polymorphic_admin_path([:admin, @record]) data-confirm=translate('admin.messages.confirm_unsaved_changes')
          i.left.arrow.icon
          = translate 'admin.action.simple.back'
      - elsif policy(@model).index?
        a.ui.basic.button href=polymorphic_admin_path([:admin, defined?(@record.page) ? @record.page : @record.class]) data-confirm=translate('admin.messages.confirm_unsaved_changes')
          i.left.arrow.icon
          = translate 'admin.action.target.back', records: human_model_name(@record, :plural)

      - if allow.publish?
        button.ui.basic.positive.button type='submit' name='draft' value='true'
          = translate 'admin.action.simple.save_draft'

        - if @record.has_translation?(:details)
          button.ui.basic.primary.button type='submit'
            = translate 'admin.action.simple.update'
            '  &
            = translate 'admin.action.simple.approve'
      - else
        button.ui.basic.positive.button type='submit'
          = translate 'admin.action.simple.update'

      = render 'uploader', endpoint: polymorphic_admin_path([:admin, @record, MediaFile])
